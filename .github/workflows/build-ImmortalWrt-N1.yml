name: Build ImmortalWrt N1

on:
  repository_dispatch:
  workflow_dispatch:

  schedule:
    - cron: 0 16 * * 4

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-24.10
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
    - name: 创建编译空间挂载点
      run: |
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
    - name: 最大化编译空间
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 2048
        swap-size-mb: 1024
        build-mount-path: /workdir
        overprovision-lvm: 'true'
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'

    - name: 检查Actions
      uses: actions/checkout@v4

    - name: 检查服务器配置
      run: |
        echo "警告⚠"
        echo "分配的服务器性能有限，若选择的插件过多，务必注意CPU性能！"
        echo "云编译建议取消勾选Node.js及其相关插件！"
        echo "已知CPU型号（降序）：8370C,8272CL,8171M,E5系列"
        echo "--------------------------CPU信息--------------------------"
        echo "CPU物理数量:$(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)"
        echo -e "CPU核心及版本信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo "--------------------------内存信息--------------------------"
        echo "已安装内存详细信息："
        sudo lshw -short -C memory | grep GiB
        echo -e "\n"
        echo "--------------------------硬盘信息--------------------------"
        echo -e  "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l) \n"
        echo "硬盘详情："
        df -Th

    - name: 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update -y
        sudo -E apt-get -y install $(curl -fsSL https://tinyurl.com/make-openwrt)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        echo "硬盘详情："
        df -Th

    - name: 克隆源码
      id: codes
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        echo "build_tag=ImmortalWrt-N1-$(date +"%Y.%m")" >> ${GITHUB_OUTPUT}
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "tag_name=$(date +%Y%m%d)" >> $GITHUB_ENV
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: 加载DIY_P1
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: 更新feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: 安装feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: 加载DIY_P2
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: 下载软件包
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        echo "硬盘详情："
        df -Th
                
    - name: 编译固件
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Clear server space
      id: clean
      if: ${{ steps.compile.outputs.status }} == 'success' && !cancelled()
      run: |
        cd openwrt/
        [[ -d "output" ]] || mkdir output
        cp -f bin/targets/*/*/*rootfs.tar.gz output/
        cp -f .config output/config
        rm -rf $(ls . | grep -v "^output$" | xargs) 2>/dev/null

        df -hT ${PWD}
        echo "status=success" >> ${GITHUB_OUTPUT}

    #- name: Upload OpenWrt to Release
    #  uses: ncipollo/release-action@main
    #  if: ${{ steps.clean.outputs.status }} == 'success' && !cancelled()
    #  with:
    #    tag: ${{ steps.codes.outputs.build_tag }}
    #    artifacts: openwrt/output/*
    #    allowUpdates: true
    #    removeArtifacts: false
    #    replacesArtifacts: true
    #    token: ${{ secrets.GH_TOKEN }}

    - name: 打包内核
      uses: ophub/flippy-openwrt-actions@main
      if: (!cancelled())
      env:
        WHOAMI: v2
        OPENWRT_ARMVIRT: openwrt/output/*rootfs.tar.gz
        PACKAGE_SOC: s905d
        KERNEL_REPO_URL: v2clash/build-armbian
        KERNEL_VERSION_NAME: 6.6.y_6.12.y
        KERNEL_AUTO_LATEST: true
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: 发布固件
      uses: ncipollo/release-action@main
      with:
        tag: ${{ steps.codes.outputs.build_tag }}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
        allowUpdates: true
        removeArtifacts: false
        replacesArtifacts: true
        token: ${{ secrets.GH_TOKEN }}
        body: |
              ---  使用说明 ---
              
              源码：${{ env.REPO_URL }}
              分支：${{ env.REPO_BRANCH }}
              
              网关：192.168.1.4
              用户名：root
              密码：password

    - name: 删除运行记录
      uses: Mattraks/delete-workflow-runs@v2
      with:
        retain_days: 0
        keep_minimum_runs: 3
